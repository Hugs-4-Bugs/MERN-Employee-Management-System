{"ast":null,"code":"var _jsxFileName = \"/Users/prabhatkumar/Downloads/mern-employee-management/frontend/src/components/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// // Example component for login\n// const Login = () => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [token, setToken] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n//       setToken(response.data.token);\n//       // Store the token in localStorage or state as needed\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <input\n//         type=\"text\"\n//         value={userName}\n//         onChange={(e) => setUserName(e.target.value)}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n\n// // Example component for managing employees\n// const EmployeeManagement = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/employees`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n//           },\n//         });\n//         setEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n\n//     fetchEmployees();\n//   }, []);\n\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       await axios.post(`${API_URL}/employees`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error creating employee:', error);\n//     }\n//   };\n\n//   const handleUpdateEmployee = async (id) => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       await axios.put(`${API_URL}/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee Management</h2>\n//       {/* Form for creating or updating employees */}\n//       <input\n//         type=\"text\"\n//         value={newEmployee.name}\n//         onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n//         placeholder=\"Name\"\n//       />\n//       {/* Add other input fields similarly */}\n//       <input\n//         type=\"file\"\n//         onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n//       />\n//       <button onClick={handleCreateEmployee}>Create Employee</button>\n\n//       <h3>Employee List</h3>\n//       <ul>\n//         {employees.map(emp => (\n//           <li key={emp._id}>\n//             {emp.name} - {emp.email}\n//             <button onClick={() => handleUpdateEmployee(emp._id)}>Update</button>\n//             <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// const App = () => {\n//   return (\n//     <div>\n//       <Login />\n//       <EmployeeManagement />\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// // Example component for login\n// const Login = ({ onLogin }) => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n//       localStorage.setItem('token', response.data.token);\n//       onLogin(); // Notify parent about successful login\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <input\n//         type=\"text\"\n//         value={userName}\n//         onChange={(e) => setUserName(e.target.value)}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n\n// // Example component for managing employees\n// const EmployeeManagement = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n//   const [editingEmployee, setEditingEmployee] = useState(null);\n\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/employees`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n//           },\n//         });\n//         setEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n\n//     fetchEmployees();\n//   }, []);\n\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       if (editingEmployee) {\n//         await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       } else {\n//         await axios.post(`${API_URL}/employees`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       }\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//       setNewEmployee({\n//         name: '',\n//         email: '',\n//         mobile: '',\n//         designation: '',\n//         gender: '',\n//         course: '',\n//         image: null,\n//       });\n//       setEditingEmployee(null); // Clear the editing state\n//     } catch (error) {\n//       console.error('Error saving employee:', error);\n//     }\n//   };\n\n//   const handleUpdateEmployee = (employee) => {\n//     setNewEmployee(employee);\n//     setEditingEmployee(employee);\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee Management</h2>\n//       <form onSubmit={(e) => { e.preventDefault(); handleCreateEmployee(); }}>\n//         <input\n//           type=\"text\"\n//           value={newEmployee.name}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           value={newEmployee.email}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, email: e.target.value })}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={newEmployee.mobile}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, mobile: e.target.value })}\n//           placeholder=\"Mobile No\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={newEmployee.designation}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, designation: e.target.value })}\n//           placeholder=\"Designation\"\n//           required\n//         />\n//         <select\n//           value={newEmployee.gender}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, gender: e.target.value })}\n//           required\n//         >\n//           <option value=\"\">Select Gender</option>\n//           <option value=\"M\">Male</option>\n//           <option value=\"F\">Female</option>\n//         </select>\n//         <input\n//           type=\"text\"\n//           value={newEmployee.course}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, course: e.target.value })}\n//           placeholder=\"Course\"\n//           required\n//         />\n//         <input\n//           type=\"file\"\n//           onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n//         />\n//         <button type=\"submit\">{editingEmployee ? 'Update Employee' : 'Create Employee'}</button>\n//       </form>\n\n//       <h3>Employee List</h3>\n//       <ul>\n//         {employees.map(emp => (\n//           <li key={emp._id}>\n//             {emp.name} - {emp.email}\n//             <button onClick={() => handleUpdateEmployee(emp)}>Update</button>\n//             <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// const App = () => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   return (\n//     <div>\n//       {!isLoggedIn ? <Login onLogin={handleLogin} /> : <EmployeeManagement />}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport EmployeeList from './components/EmployeeList';\nimport CreateEmployee from './components/CreateEmployee';\nimport EditEmployee from './components/EditEmployee';\nimport TestComponent from './components/TestComponent';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5005'; // Backend URL\n\nconst App = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    designation: '',\n    gender: '',\n    course: '',\n    image: null\n  });\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n  useEffect(() => {\n    if (isLoggedIn) {\n      const fetchEmployees = async () => {\n        try {\n          const response = await axios.get(`${API_URL}/employees`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          setEmployees(response.data);\n        } catch (error) {\n          console.error('Error fetching employees:', error);\n        }\n      };\n      fetchEmployees();\n    }\n  }, [isLoggedIn]);\n  const handleCreateEmployee = async () => {\n    const formData = new FormData();\n    Object.keys(newEmployee).forEach(key => {\n      formData.append(key, newEmployee[key]);\n    });\n    try {\n      if (editingEmployee) {\n        await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      } else {\n        await axios.post(`${API_URL}/employees`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      }\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setEmployees(response.data);\n      setNewEmployee({\n        name: '',\n        email: '',\n        mobile: '',\n        designation: '',\n        gender: '',\n        course: '',\n        image: null\n      });\n      setEditingEmployee(null); // Clear the editing state\n    } catch (error) {\n      console.error('Error saving employee:', error);\n    }\n  };\n  const handleUpdateEmployee = employee => {\n    setNewEmployee(employee);\n    setEditingEmployee(employee);\n  };\n  const handleDeleteEmployee = async id => {\n    try {\n      await axios.delete(`${API_URL}/employees/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n    }\n  };\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(Navbar, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(Register, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 56\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/employee-list\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(EmployeeList, {\n          employees: employees,\n          onUpdateEmployee: handleUpdateEmployee,\n          onDeleteEmployee: handleDeleteEmployee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 60\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 181\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create-employee\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(CreateEmployee, {\n          newEmployee: newEmployee,\n          setNewEmployee: setNewEmployee,\n          handleCreateEmployee: handleCreateEmployee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 62\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 185\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit-employee/:id\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(EditEmployee, {\n          handleUpdateEmployee: handleUpdateEmployee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 64\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 127\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/test\",\n        element: /*#__PURE__*/_jsxDEV(TestComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 605,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"S1/PsK9iGndEB/lrT1Bay6qHhKc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","useNavigate","Navbar","Login","Register","Dashboard","EmployeeList","CreateEmployee","EditEmployee","TestComponent","axios","jsxDEV","_jsxDEV","API_URL","App","_s","employees","setEmployees","newEmployee","setNewEmployee","name","email","mobile","designation","gender","course","image","editingEmployee","setEditingEmployee","isLoggedIn","setIsLoggedIn","localStorage","getItem","fetchEmployees","response","get","headers","Authorization","data","error","console","handleCreateEmployee","formData","FormData","Object","keys","forEach","key","append","put","_id","post","handleUpdateEmployee","employee","handleDeleteEmployee","id","delete","handleLogin","handleLogout","removeItem","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","onUpdateEmployee","onDeleteEmployee","_c","$RefreshReg$"],"sources":["/Users/prabhatkumar/Downloads/mern-employee-management/frontend/src/components/App.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// // Example component for login\n// const Login = () => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [token, setToken] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n//       setToken(response.data.token);\n//       // Store the token in localStorage or state as needed\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <input\n//         type=\"text\"\n//         value={userName}\n//         onChange={(e) => setUserName(e.target.value)}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n\n// // Example component for managing employees\n// const EmployeeManagement = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/employees`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n//           },\n//         });\n//         setEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n\n//     fetchEmployees();\n//   }, []);\n\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       await axios.post(`${API_URL}/employees`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error creating employee:', error);\n//     }\n//   };\n\n//   const handleUpdateEmployee = async (id) => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       await axios.put(`${API_URL}/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee Management</h2>\n//       {/* Form for creating or updating employees */}\n//       <input\n//         type=\"text\"\n//         value={newEmployee.name}\n//         onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n//         placeholder=\"Name\"\n//       />\n//       {/* Add other input fields similarly */}\n//       <input\n//         type=\"file\"\n//         onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n//       />\n//       <button onClick={handleCreateEmployee}>Create Employee</button>\n\n//       <h3>Employee List</h3>\n//       <ul>\n//         {employees.map(emp => (\n//           <li key={emp._id}>\n//             {emp.name} - {emp.email}\n//             <button onClick={() => handleUpdateEmployee(emp._id)}>Update</button>\n//             <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// const App = () => {\n//   return (\n//     <div>\n//       <Login />\n//       <EmployeeManagement />\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// // Example component for login\n// const Login = ({ onLogin }) => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n//       localStorage.setItem('token', response.data.token);\n//       onLogin(); // Notify parent about successful login\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <input\n//         type=\"text\"\n//         value={userName}\n//         onChange={(e) => setUserName(e.target.value)}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n\n// // Example component for managing employees\n// const EmployeeManagement = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n//   const [editingEmployee, setEditingEmployee] = useState(null);\n\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/employees`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n//           },\n//         });\n//         setEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n\n//     fetchEmployees();\n//   }, []);\n\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       if (editingEmployee) {\n//         await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       } else {\n//         await axios.post(`${API_URL}/employees`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       }\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//       setNewEmployee({\n//         name: '',\n//         email: '',\n//         mobile: '',\n//         designation: '',\n//         gender: '',\n//         course: '',\n//         image: null,\n//       });\n//       setEditingEmployee(null); // Clear the editing state\n//     } catch (error) {\n//       console.error('Error saving employee:', error);\n//     }\n//   };\n\n//   const handleUpdateEmployee = (employee) => {\n//     setNewEmployee(employee);\n//     setEditingEmployee(employee);\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee Management</h2>\n//       <form onSubmit={(e) => { e.preventDefault(); handleCreateEmployee(); }}>\n//         <input\n//           type=\"text\"\n//           value={newEmployee.name}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           value={newEmployee.email}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, email: e.target.value })}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={newEmployee.mobile}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, mobile: e.target.value })}\n//           placeholder=\"Mobile No\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={newEmployee.designation}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, designation: e.target.value })}\n//           placeholder=\"Designation\"\n//           required\n//         />\n//         <select\n//           value={newEmployee.gender}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, gender: e.target.value })}\n//           required\n//         >\n//           <option value=\"\">Select Gender</option>\n//           <option value=\"M\">Male</option>\n//           <option value=\"F\">Female</option>\n//         </select>\n//         <input\n//           type=\"text\"\n//           value={newEmployee.course}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, course: e.target.value })}\n//           placeholder=\"Course\"\n//           required\n//         />\n//         <input\n//           type=\"file\"\n//           onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n//         />\n//         <button type=\"submit\">{editingEmployee ? 'Update Employee' : 'Create Employee'}</button>\n//       </form>\n\n//       <h3>Employee List</h3>\n//       <ul>\n//         {employees.map(emp => (\n//           <li key={emp._id}>\n//             {emp.name} - {emp.email}\n//             <button onClick={() => handleUpdateEmployee(emp)}>Update</button>\n//             <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// const App = () => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   return (\n//     <div>\n//       {!isLoggedIn ? <Login onLogin={handleLogin} /> : <EmployeeManagement />}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport EmployeeList from './components/EmployeeList';\nimport CreateEmployee from './components/CreateEmployee';\nimport EditEmployee from './components/EditEmployee';\nimport TestComponent from './components/TestComponent';\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:5005'; // Backend URL\n\nconst App = () => {\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    designation: '',\n    gender: '',\n    course: '',\n    image: null,\n  });\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      const fetchEmployees = async () => {\n        try {\n          const response = await axios.get(`${API_URL}/employees`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          });\n          setEmployees(response.data);\n        } catch (error) {\n          console.error('Error fetching employees:', error);\n        }\n      };\n\n      fetchEmployees();\n    }\n  }, [isLoggedIn]);\n\n  const handleCreateEmployee = async () => {\n    const formData = new FormData();\n    Object.keys(newEmployee).forEach(key => {\n      formData.append(key, newEmployee[key]);\n    });\n\n    try {\n      if (editingEmployee) {\n        await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n      } else {\n        await axios.post(`${API_URL}/employees`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n      }\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setEmployees(response.data);\n      setNewEmployee({\n        name: '',\n        email: '',\n        mobile: '',\n        designation: '',\n        gender: '',\n        course: '',\n        image: null,\n      });\n      setEditingEmployee(null); // Clear the editing state\n    } catch (error) {\n      console.error('Error saving employee:', error);\n    }\n  };\n\n  const handleUpdateEmployee = (employee) => {\n    setNewEmployee(employee);\n    setEditingEmployee(employee);\n  };\n\n  const handleDeleteEmployee = async (id) => {\n    try {\n      await axios.delete(`${API_URL}/employees/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n    }\n  };\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <Router>\n      {isLoggedIn && <Navbar onLogout={handleLogout} />}\n      <Routes>\n        <Route path=\"/\" element={isLoggedIn ? <Dashboard /> : <Register onLogin={handleLogin} />} />\n        <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n        <Route path=\"/register\" element={<Register onLogin={handleLogin} />} />\n        <Route path=\"/dashboard\" element={isLoggedIn ? <Dashboard /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/employee-list\" element={isLoggedIn ? <EmployeeList employees={employees} onUpdateEmployee={handleUpdateEmployee} onDeleteEmployee={handleDeleteEmployee} /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/create-employee\" element={isLoggedIn ? <CreateEmployee newEmployee={newEmployee} setNewEmployee={setNewEmployee} handleCreateEmployee={handleCreateEmployee} /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/edit-employee/:id\" element={isLoggedIn ? <EditEmployee handleUpdateEmployee={handleUpdateEmployee} /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/test\" element={<TestComponent />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAqoCA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AACtF,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAA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","ignoreList":[]},"metadata":{},"sourceType":"module"}