{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// const EditEmployee = ({ match }) => {\n//   const [form, setForm] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: [],\n//     image: null,\n//   });\n//   useEffect(() => {\n//     // Fetch employee details by ID\n//     const fetchEmployee = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/employees/${match.params.id}`, {\n//           headers: {\n//             'x-auth-token': localStorage.getItem('token'),\n//           },\n//         });\n//         setForm(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employee:', error);\n//       }\n//     };\n//     fetchEmployee();\n//   }, [match.params.id]);\n//   const handleChange = (e) => {\n//     const { name, value, type, checked } = e.target;\n//     if (type === 'checkbox') {\n//       setForm((prevForm) => ({\n//         ...prevForm,\n//         course: checked\n//           ? [...prevForm.course, value]\n//           : prevForm.course.filter((c) => c !== value),\n//       }));\n//     } else {\n//       setForm({\n//         ...form,\n//         [name]: value,\n//       });\n//     }\n//   };\n//   const handleFileChange = (e) => {\n//     setForm({\n//       ...form,\n//       image: e.target.files[0],\n//     });\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(form).forEach((key) => {\n//       if (Array.isArray(form[key])) {\n//         form[key].forEach((item) => formData.append(key, item));\n//       } else {\n//         formData.append(key, form[key]);\n//       }\n//     });\n//     try {\n//       await axios.put(`http://localhost:5000/employees/${match.params.id}`, formData, {\n//         headers: {\n//           'x-auth-token': localStorage.getItem('token'),\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       console.log('Employee updated successfully');\n//       window.location.href = '/dashboard'; // Redirect or update UI as needed\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n//   const handleDelete = async () => {\n//     try {\n//       await axios.delete(`http://localhost:5000/employees/${match.params.id}`, {\n//         headers: {\n//           'x-auth-token': localStorage.getItem('token'),\n//         },\n//       });\n//       console.log('Employee deleted successfully');\n//       window.location.href = '/dashboard'; // Redirect to dashboard or update UI as needed\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n//   return (\n//     <div>\n//       <h1>Edit Employee</h1>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={form.name}\n//           placeholder=\"Name\"\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={form.email}\n//           placeholder=\"Email\"\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"mobile\"\n//           value={form.mobile}\n//           placeholder=\"Mobile No\"\n//           onChange={handleChange}\n//           required\n//         />\n//         <select name=\"designation\" value={form.designation} onChange={handleChange} required>\n//           <option value=\"\">Select Designation</option>\n//           <option value=\"HR\">HR</option>\n//           <option value=\"Manager\">Manager</option>\n//           <option value=\"Sales\">Sales</option>\n//         </select>\n//         <input\n//           type=\"radio\"\n//           name=\"gender\"\n//           value=\"M\"\n//           checked={form.gender === 'M'}\n//           onChange={handleChange}\n//           required\n//         /> Male\n//         <input\n//           type=\"radio\"\n//           name=\"gender\"\n//           value=\"F\"\n//           checked={form.gender === 'F'}\n//           onChange={handleChange}\n//           required\n//         /> Female\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"MCA\"\n//           checked={form.course.includes('MCA')}\n//           onChange={handleChange}\n//         /> MCA\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"BCA\"\n//           checked={form.course.includes('BCA')}\n//           onChange={handleChange}\n//         /> BCA\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"BSC\"\n//           checked={form.course.includes('BSC')}\n//           onChange={handleChange}\n//         /> BSC\n//         <input\n//           type=\"file\"\n//           name=\"image\"\n//           onChange={handleFileChange}\n//           accept=\"image/jpeg,image/png\"\n//         />\n//         <button type=\"submit\">Update</button>\n//       </form>\n//       <button onClick={handleDelete} style={{ marginTop: '10px', backgroundColor: 'red', color: 'white' }}>\n//         Delete Employee\n//       </button>\n//     </div>\n//   );\n// };\n// export default EditEmployee;\n// import React, { useState, useEffect } from 'react';\n// import api from '../api'; // Import the Axios instance\n// import { useNavigate, useParams } from 'react-router-dom';\n// const EditEmployee = () => {\n//   const [employee, setEmployee] = useState({});\n//   const [image, setImage] = useState(null);\n//   const navigate = useNavigate(); // For navigation\n//   const { id } = useParams(); // Get the employee ID from URL\n//   useEffect(() => {\n//     const fetchEmployee = async () => {\n//       try {\n//         const response = await api.get(`/employees/${id}`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//         setEmployee(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employee:', error);\n//       }\n//     };\n//     fetchEmployee();\n//   }, [id]);\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     formData.append('name', employee.name);\n//     formData.append('email', employee.email);\n//     formData.append('mobile', employee.mobile);\n//     formData.append('designation', employee.designation);\n//     formData.append('gender', employee.gender);\n//     formData.append('course', employee.course);\n//     if (image) formData.append('image', image);\n//     try {\n//       await api.put(`/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       navigate('/dashboard'); // Redirect to dashboard after updating the employee\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n//   return (\n//     <div>\n//       <h2>Edit Employee</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           value={employee.name || ''}\n//           onChange={(e) => setEmployee({ ...employee, name: e.target.value })}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           value={employee.email || ''}\n//           onChange={(e) => setEmployee({ ...employee, email: e.target.value })}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={employee.mobile || ''}\n//           onChange={(e) => setEmployee({ ...employee, mobile: e.target.value })}\n//           placeholder=\"Mobile\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={employee.designation || ''}\n//           onChange={(e) => setEmployee({ ...employee, designation: e.target.value })}\n//           placeholder=\"Designation\"\n//           required\n//         />\n//         <select\n//           value={employee.gender || 'Male'}\n//           onChange={(e) => setEmployee({ ...employee, gender: e.target.value })}\n//         >\n//           <option value=\"Male\">Male</option>\n//           <option value=\"Female\">Female</option>\n//         </select>\n//         <input\n//           type=\"text\"\n//           value={employee.course || ''}\n//           onChange={(e) => setEmployee({ ...employee, course: e.target.value })}\n//           placeholder=\"Course\"\n//           required\n//         />\n//         <input\n//           type=\"file\"\n//           onChange={(e) => setImage(e.target.files[0])}\n//         />\n//         <button type=\"submit\">Update Employee</button>\n//       </form>\n//     </div>\n//   );\n// };\n// export default EditEmployee;\nimport React,{useState}from'react';import{Link,useNavigate}from'react-router-dom';import'./styles/EditEmployee.css';// Assuming you have CSS for styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditEmployee=()=>{const[employee,setEmployee]=useState({name:'Prabhat Kumar',email:'hcgupta@cstech.in',mobile:'954010044',designation:'HR',gender:'M',course:['MCA'],image:null});const navigate=useNavigate();const handleUpdate=e=>{e.preventDefault();// Add update logic here\nconsole.log('Updated Employee data:',employee);navigate('/employee-list');};return/*#__PURE__*/_jsxs(\"div\",{className:\"edit-employee\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"nav\",children:[/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",children:\"Home\"}),/*#__PURE__*/_jsx(Link,{to:\"/employee-list\",children:\"EmployeeList\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[\"Suruchi Sharma \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),children:\"Logout\"})]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUpdate,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Employee\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:employee.name,onChange:e=>setEmployee({...employee,name:e.target.value}),placeholder:\"Name\",required:true})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:employee.email,onChange:e=>setEmployee({...employee,email:e.target.value}),placeholder:\"Email\",required:true})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:employee.mobile,onChange:e=>setEmployee({...employee,mobile:e.target.value}),placeholder:\"Mobile No\",required:true})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"select\",{value:employee.designation,onChange:e=>setEmployee({...employee,designation:e.target.value}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"HR\",children:\"HR\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Manager\",children:\"Manager\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Sales\",children:\"Sales\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Developer\",children:\"Developer\"})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"gender\",value:\"M\",checked:employee.gender==='M',onChange:e=>setEmployee({...employee,gender:e.target.value})}),\"Male\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"gender\",value:\"F\",checked:employee.gender==='F',onChange:e=>setEmployee({...employee,gender:e.target.value})}),\"Female\"]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:e=>setEmployee({...employee,image:e.target.files[0]}),required:true})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Update\"})]})]});};export default EditEmployee;// // src/components/EditEmployee.js\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles/EditEmployee.css';\n// const EditEmployee = () => {\n//   const { id } = useParams();\n//   const navigate = useNavigate();\n//   const [employeeData, setEmployeeData] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: [],\n//     image: null,\n//   });\n//   useEffect(() => {\n//     const fetchEmployee = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/employees/${id}`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//         setEmployeeData(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employee data:', error);\n//       }\n//     };\n//     fetchEmployee();\n//   }, [id]);\n//   const handleChange = (e) => {\n//     setEmployeeData({ ...employeeData, [e.target.name]: e.target.value });\n//   };\n//   const handleFileChange = (e) => {\n//     setEmployeeData({ ...employeeData, image: e.target.files[0] });\n//   };\n//   const handleUpdate = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(employeeData).forEach(key => formData.append(key, employeeData[key]));\n//     try {\n//       await axios.put(`http://localhost:5005/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       alert('Employee updated successfully!');\n//       navigate('/employee-list');\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n//   return (\n//     <div className=\"edit-employee-container\">\n//       <h2>Edit Employee</h2>\n//       <form onSubmit={handleUpdate}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={employeeData.name}\n//           onChange={handleChange}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={employeeData.email}\n//           onChange={handleChange}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"mobile\"\n//           value={employeeData.mobile}\n//           onChange={handleChange}\n//           placeholder=\"Mobile No\"\n//           required\n//         />\n//         <select\n//           name=\"designation\"\n//           value={employeeData.designation}\n//           onChange={handleChange}\n//           required\n//         >\n//           <option value=\"\">Select Designation</option>\n//           <option value=\"HR\">HR</option>\n//           <option value=\"Manager\">Manager</option>\n//           <option value=\"Sales\">Sales</option>\n//           <option value=\"Developer\">Developer</option>\n//         </select>\n//         <div>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               name=\"gender\"\n//               value=\"Male\"\n//               checked={employeeData.gender === 'Male'}\n//               onChange={handleChange}\n//             />\n//             Male\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               name=\"gender\"\n//               value=\"Female\"\n//               checked={employeeData.gender === 'Female'}\n//               onChange={handleChange}\n//             />\n//             Female\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"MCA\"\n//               checked={employeeData.course.includes('MCA')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'MCA'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'MCA') });\n//                 }\n//               }}\n//             />\n//             MCA\n//           </label>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"BCA\"\n//               checked={employeeData.course.includes('BCA')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'BCA'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'BCA') });\n//                 }\n//               }}\n//             />\n//             BCA\n//           </label>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"BSC\"\n//               checked={employeeData.course.includes('BSC')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'BSC'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'BSC') });\n//                 }\n//               }}\n//             />\n//             BSC\n//           </label>\n//         </div>\n//         <input type=\"file\" name=\"image\" onChange={handleFileChange} />\n//         <button type=\"submit\">Update Employee</button>\n//       </form>\n//     </div>\n//   );\n// };\n// export default EditEmployee;","map":{"version":3,"names":["React","useState","Link","useNavigate","jsx","_jsx","jsxs","_jsxs","EditEmployee","employee","setEmployee","name","email","mobile","designation","gender","course","image","navigate","handleUpdate","e","preventDefault","console","log","className","children","to","onClick","onSubmit","type","value","onChange","target","placeholder","required","checked","files"],"sources":["/Users/prabhatkumar/Downloads/mern-employee-management/frontend/src/components/EditEmployee.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const EditEmployee = ({ match }) => {\n//   const [form, setForm] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: [],\n//     image: null,\n//   });\n\n//   useEffect(() => {\n//     // Fetch employee details by ID\n//     const fetchEmployee = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/employees/${match.params.id}`, {\n//           headers: {\n//             'x-auth-token': localStorage.getItem('token'),\n//           },\n//         });\n//         setForm(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employee:', error);\n//       }\n//     };\n\n//     fetchEmployee();\n//   }, [match.params.id]);\n\n//   const handleChange = (e) => {\n//     const { name, value, type, checked } = e.target;\n//     if (type === 'checkbox') {\n//       setForm((prevForm) => ({\n//         ...prevForm,\n//         course: checked\n//           ? [...prevForm.course, value]\n//           : prevForm.course.filter((c) => c !== value),\n//       }));\n//     } else {\n//       setForm({\n//         ...form,\n//         [name]: value,\n//       });\n//     }\n//   };\n\n//   const handleFileChange = (e) => {\n//     setForm({\n//       ...form,\n//       image: e.target.files[0],\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(form).forEach((key) => {\n//       if (Array.isArray(form[key])) {\n//         form[key].forEach((item) => formData.append(key, item));\n//       } else {\n//         formData.append(key, form[key]);\n//       }\n//     });\n\n//     try {\n//       await axios.put(`http://localhost:5000/employees/${match.params.id}`, formData, {\n//         headers: {\n//           'x-auth-token': localStorage.getItem('token'),\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       console.log('Employee updated successfully');\n//       window.location.href = '/dashboard'; // Redirect or update UI as needed\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n\n//   const handleDelete = async () => {\n//     try {\n//       await axios.delete(`http://localhost:5000/employees/${match.params.id}`, {\n//         headers: {\n//           'x-auth-token': localStorage.getItem('token'),\n//         },\n//       });\n//       console.log('Employee deleted successfully');\n//       window.location.href = '/dashboard'; // Redirect to dashboard or update UI as needed\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Edit Employee</h1>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={form.name}\n//           placeholder=\"Name\"\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={form.email}\n//           placeholder=\"Email\"\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"mobile\"\n//           value={form.mobile}\n//           placeholder=\"Mobile No\"\n//           onChange={handleChange}\n//           required\n//         />\n//         <select name=\"designation\" value={form.designation} onChange={handleChange} required>\n//           <option value=\"\">Select Designation</option>\n//           <option value=\"HR\">HR</option>\n//           <option value=\"Manager\">Manager</option>\n//           <option value=\"Sales\">Sales</option>\n//         </select>\n//         <input\n//           type=\"radio\"\n//           name=\"gender\"\n//           value=\"M\"\n//           checked={form.gender === 'M'}\n//           onChange={handleChange}\n//           required\n//         /> Male\n//         <input\n//           type=\"radio\"\n//           name=\"gender\"\n//           value=\"F\"\n//           checked={form.gender === 'F'}\n//           onChange={handleChange}\n//           required\n//         /> Female\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"MCA\"\n//           checked={form.course.includes('MCA')}\n//           onChange={handleChange}\n//         /> MCA\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"BCA\"\n//           checked={form.course.includes('BCA')}\n//           onChange={handleChange}\n//         /> BCA\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"BSC\"\n//           checked={form.course.includes('BSC')}\n//           onChange={handleChange}\n//         /> BSC\n//         <input\n//           type=\"file\"\n//           name=\"image\"\n//           onChange={handleFileChange}\n//           accept=\"image/jpeg,image/png\"\n//         />\n//         <button type=\"submit\">Update</button>\n//       </form>\n//       <button onClick={handleDelete} style={{ marginTop: '10px', backgroundColor: 'red', color: 'white' }}>\n//         Delete Employee\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default EditEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import api from '../api'; // Import the Axios instance\n// import { useNavigate, useParams } from 'react-router-dom';\n\n// const EditEmployee = () => {\n//   const [employee, setEmployee] = useState({});\n//   const [image, setImage] = useState(null);\n//   const navigate = useNavigate(); // For navigation\n//   const { id } = useParams(); // Get the employee ID from URL\n\n//   useEffect(() => {\n//     const fetchEmployee = async () => {\n//       try {\n//         const response = await api.get(`/employees/${id}`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//         setEmployee(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employee:', error);\n//       }\n//     };\n//     fetchEmployee();\n//   }, [id]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     formData.append('name', employee.name);\n//     formData.append('email', employee.email);\n//     formData.append('mobile', employee.mobile);\n//     formData.append('designation', employee.designation);\n//     formData.append('gender', employee.gender);\n//     formData.append('course', employee.course);\n//     if (image) formData.append('image', image);\n\n//     try {\n//       await api.put(`/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       navigate('/dashboard'); // Redirect to dashboard after updating the employee\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Edit Employee</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           value={employee.name || ''}\n//           onChange={(e) => setEmployee({ ...employee, name: e.target.value })}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           value={employee.email || ''}\n//           onChange={(e) => setEmployee({ ...employee, email: e.target.value })}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={employee.mobile || ''}\n//           onChange={(e) => setEmployee({ ...employee, mobile: e.target.value })}\n//           placeholder=\"Mobile\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={employee.designation || ''}\n//           onChange={(e) => setEmployee({ ...employee, designation: e.target.value })}\n//           placeholder=\"Designation\"\n//           required\n//         />\n//         <select\n//           value={employee.gender || 'Male'}\n//           onChange={(e) => setEmployee({ ...employee, gender: e.target.value })}\n//         >\n//           <option value=\"Male\">Male</option>\n//           <option value=\"Female\">Female</option>\n//         </select>\n//         <input\n//           type=\"text\"\n//           value={employee.course || ''}\n//           onChange={(e) => setEmployee({ ...employee, course: e.target.value })}\n//           placeholder=\"Course\"\n//           required\n//         />\n//         <input\n//           type=\"file\"\n//           onChange={(e) => setImage(e.target.files[0])}\n//         />\n//         <button type=\"submit\">Update Employee</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default EditEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './styles/EditEmployee.css'; // Assuming you have CSS for styling\n\nconst EditEmployee = () => {\n  const [employee, setEmployee] = useState({\n    name: 'Prabhat Kumar',\n    email: 'hcgupta@cstech.in',\n    mobile: '954010044',\n    designation: 'HR',\n    gender: 'M',\n    course: ['MCA'],\n    image: null,\n  });\n\n  const navigate = useNavigate();\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    // Add update logic here\n    console.log('Updated Employee data:', employee);\n    navigate('/employee-list');\n  };\n\n  return (\n    <div className=\"edit-employee\">\n      <div className=\"header\">\n        <div className=\"nav\">\n          <Link to=\"/dashboard\">Home</Link>\n          <Link to=\"/employee-list\">EmployeeList</Link>\n        </div>\n        <div className=\"user-info\">\n          Suruchi Sharma <button onClick={() => navigate('/')}>Logout</button>\n        </div>\n      </div>\n      <form onSubmit={handleUpdate}>\n        <h2>Edit Employee</h2>\n        <div>\n          <input\n            type=\"text\"\n            value={employee.name}\n            onChange={(e) => setEmployee({ ...employee, name: e.target.value })}\n            placeholder=\"Name\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"email\"\n            value={employee.email}\n            onChange={(e) => setEmployee({ ...employee, email: e.target.value })}\n            placeholder=\"Email\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            value={employee.mobile}\n            onChange={(e) => setEmployee({ ...employee, mobile: e.target.value })}\n            placeholder=\"Mobile No\"\n            required\n          />\n        </div>\n        <div>\n          <select\n            value={employee.designation}\n            onChange={(e) => setEmployee({ ...employee, designation: e.target.value })}\n            required\n          >\n            <option value=\"HR\">HR</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Sales\">Sales</option>\n            <option value=\"Developer\">Developer</option>\n          </select>\n        </div>\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              value=\"M\"\n              checked={employee.gender === 'M'}\n              onChange={(e) => setEmployee({ ...employee, gender: e.target.value })}\n            />\n            Male\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              value=\"F\"\n              checked={employee.gender === 'F'}\n              onChange={(e) => setEmployee({ ...employee, gender: e.target.value })}\n            />\n            Female\n          </label>\n        </div>\n        <div>\n          <input\n            type=\"file\"\n            onChange={(e) => setEmployee({ ...employee, image: e.target.files[0] })}\n            required\n          />\n        </div>\n        <button type=\"submit\">Update</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // src/components/EditEmployee.js\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles/EditEmployee.css';\n\n// const EditEmployee = () => {\n//   const { id } = useParams();\n//   const navigate = useNavigate();\n//   const [employeeData, setEmployeeData] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: [],\n//     image: null,\n//   });\n\n//   useEffect(() => {\n//     const fetchEmployee = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/employees/${id}`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//         setEmployeeData(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employee data:', error);\n//       }\n//     };\n\n//     fetchEmployee();\n//   }, [id]);\n\n//   const handleChange = (e) => {\n//     setEmployeeData({ ...employeeData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setEmployeeData({ ...employeeData, image: e.target.files[0] });\n//   };\n\n//   const handleUpdate = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(employeeData).forEach(key => formData.append(key, employeeData[key]));\n\n//     try {\n//       await axios.put(`http://localhost:5005/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       alert('Employee updated successfully!');\n//       navigate('/employee-list');\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"edit-employee-container\">\n//       <h2>Edit Employee</h2>\n//       <form onSubmit={handleUpdate}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={employeeData.name}\n//           onChange={handleChange}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={employeeData.email}\n//           onChange={handleChange}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"mobile\"\n//           value={employeeData.mobile}\n//           onChange={handleChange}\n//           placeholder=\"Mobile No\"\n//           required\n//         />\n//         <select\n//           name=\"designation\"\n//           value={employeeData.designation}\n//           onChange={handleChange}\n//           required\n//         >\n//           <option value=\"\">Select Designation</option>\n//           <option value=\"HR\">HR</option>\n//           <option value=\"Manager\">Manager</option>\n//           <option value=\"Sales\">Sales</option>\n//           <option value=\"Developer\">Developer</option>\n//         </select>\n//         <div>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               name=\"gender\"\n//               value=\"Male\"\n//               checked={employeeData.gender === 'Male'}\n//               onChange={handleChange}\n//             />\n//             Male\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               name=\"gender\"\n//               value=\"Female\"\n//               checked={employeeData.gender === 'Female'}\n//               onChange={handleChange}\n//             />\n//             Female\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"MCA\"\n//               checked={employeeData.course.includes('MCA')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'MCA'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'MCA') });\n//                 }\n//               }}\n//             />\n//             MCA\n//           </label>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"BCA\"\n//               checked={employeeData.course.includes('BCA')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'BCA'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'BCA') });\n//                 }\n//               }}\n//             />\n//             BCA\n//           </label>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"BSC\"\n//               checked={employeeData.course.includes('BSC')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'BSC'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'BSC') });\n//                 }\n//               }}\n//             />\n//             BSC\n//           </label>\n//         </div>\n//         <input type=\"file\" name=\"image\" onChange={handleFileChange} />\n//         <button type=\"submit\">Update Employee</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default EditEmployee;\n"],"mappingsqvC,OAASC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CACpD,MAAO,2BAA2B,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpC,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,CACvCU,IAAI,CAAE,eAAe,CACrBC,KAAK,CAAE,mBAAmB,CAC1BC,MAAM,CAAE,WAAW,CACnBC,WAAW,CAAE,IAAI,CACjBC,MAAM,CAAE,GAAG,CACXC,MAAM,CAAE,CAAC,KAAK,CAAC,CACfC,KAAK,CAAE,IACT,CAAC,CAAC,CAEF,KAAM,CAAAC,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAgB,YAAY,CAAIC,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB;AACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEd,QAAQ,CAAC,CAC/CS,QAAQ,CAAC,gBAAgB,CAAC,CAC5B,CAAC,CAED,mBACEX,KAAA,QAAKiB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BlB,KAAA,QAAKiB,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrBlB,KAAA,QAAKiB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBpB,IAAA,CAACH,IAAI,EAACwB,EAAE,CAAC,YAAY,CAAAD,QAAA,CAAC,MAAI,CAAM,CAAC,cACjCpB,IAAA,CAACH,IAAI,EAACwB,EAAE,CAAC,gBAAgB,CAAAD,QAAA,CAAC,cAAY,CAAM,CAAC,EAC1C,CAAC,cACNlB,KAAA,QAAKiB,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,iBACV,cAAApB,IAAA,WAAQsB,OAAO,CAAEA,CAAA,GAAMT,QAAQ,CAAC,GAAG,CAAE,CAAAO,QAAA,CAAC,QAAM,CAAQ,CAAC,EACjE,CAAC,EACH,CAAC,cACNlB,KAAA,SAAMqB,QAAQ,CAAET,YAAa,CAAAM,QAAA,eAC3BpB,IAAA,OAAAoB,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBpB,IAAA,QAAAoB,QAAA,cACEpB,IAAA,UACEwB,IAAI,CAAC,MAAM,CACXC,KAAK,CAAErB,QAAQ,CAACE,IAAK,CACrBoB,QAAQ,CAAGX,CAAC,EAAKV,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEE,IAAI,CAAES,CAAC,CAACY,MAAM,CAACF,KAAM,CAAC,CAAE,CACpEG,WAAW,CAAC,MAAM,CAClBC,QAAQ,MACT,CAAC,CACC,CAAC,cACN7B,IAAA,QAAAoB,QAAA,cACEpB,IAAA,UACEwB,IAAI,CAAC,OAAO,CACZC,KAAK,CAAErB,QAAQ,CAACG,KAAM,CACtBmB,QAAQ,CAAGX,CAAC,EAAKV,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEG,KAAK,CAAEQ,CAAC,CAACY,MAAM,CAACF,KAAM,CAAC,CAAE,CACrEG,WAAW,CAAC,OAAO,CACnBC,QAAQ,MACT,CAAC,CACC,CAAC,cACN7B,IAAA,QAAAoB,QAAA,cACEpB,IAAA,UACEwB,IAAI,CAAC,MAAM,CACXC,KAAK,CAAErB,QAAQ,CAACI,MAAO,CACvBkB,QAAQ,CAAGX,CAAC,EAAKV,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEI,MAAM,CAAEO,CAAC,CAACY,MAAM,CAACF,KAAM,CAAC,CAAE,CACtEG,WAAW,CAAC,WAAW,CACvBC,QAAQ,MACT,CAAC,CACC,CAAC,cACN7B,IAAA,QAAAoB,QAAA,cACElB,KAAA,WACEuB,KAAK,CAAErB,QAAQ,CAACK,WAAY,CAC5BiB,QAAQ,CAAGX,CAAC,EAAKV,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEK,WAAW,CAAEM,CAAC,CAACY,MAAM,CAACF,KAAM,CAAC,CAAE,CAC3EI,QAAQ,MAAAT,QAAA,eAERpB,IAAA,WAAQyB,KAAK,CAAC,IAAI,CAAAL,QAAA,CAAC,IAAE,CAAQ,CAAC,cAC9BpB,IAAA,WAAQyB,KAAK,CAAC,SAAS,CAAAL,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxCpB,IAAA,WAAQyB,KAAK,CAAC,OAAO,CAAAL,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpCpB,IAAA,WAAQyB,KAAK,CAAC,WAAW,CAAAL,QAAA,CAAC,WAAS,CAAQ,CAAC,EACtC,CAAC,CACN,CAAC,cACNlB,KAAA,QAAAkB,QAAA,eACElB,KAAA,UAAAkB,QAAA,eACEpB,IAAA,UACEwB,IAAI,CAAC,OAAO,CACZlB,IAAI,CAAC,QAAQ,CACbmB,KAAK,CAAC,GAAG,CACTK,OAAO,CAAE1B,QAAQ,CAACM,MAAM,GAAK,GAAI,CACjCgB,QAAQ,CAAGX,CAAC,EAAKV,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEM,MAAM,CAAEK,CAAC,CAACY,MAAM,CAACF,KAAM,CAAC,CAAE,CACvE,CAAC,OAEJ,EAAO,CAAC,cACRvB,KAAA,UAAAkB,QAAA,eACEpB,IAAA,UACEwB,IAAI,CAAC,OAAO,CACZlB,IAAI,CAAC,QAAQ,CACbmB,KAAK,CAAC,GAAG,CACTK,OAAO,CAAE1B,QAAQ,CAACM,MAAM,GAAK,GAAI,CACjCgB,QAAQ,CAAGX,CAAC,EAAKV,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEM,MAAM,CAAEK,CAAC,CAACY,MAAM,CAACF,KAAM,CAAC,CAAE,CACvE,CAAC,SAEJ,EAAO,CAAC,EACL,CAAC,cACNzB,IAAA,QAAAoB,QAAA,cACEpB,IAAA,UACEwB,IAAI,CAAC,MAAM,CACXE,QAAQ,CAAGX,CAAC,EAAKV,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEQ,KAAK,CAAEG,CAAC,CAACY,MAAM,CAACI,KAAK,CAAC,CAAC,CAAE,CAAC,CAAE,CACxEF,QAAQ,MACT,CAAC,CACC,CAAC,cACN7B,IAAA,WAAQwB,IAAI,CAAC,QAAQ,CAAAJ,QAAA,CAAC,QAAM,CAAQ,CAAC,EACjC,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjignoreList":[]},"metadata":{},"sourceType":"module"}