{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// const CreateEmployee = () => {\n//   const [form, setForm] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: [],\n//     image: null,\n//   });\n//   const handleChange = (e) => {\n//     setForm({\n//       ...form,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n//   const handleFileChange = (e) => {\n//     setForm({\n//       ...form,\n//       image: e.target.files[0],\n//     });\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(form).forEach((key) => {\n//       formData.append(key, form[key]);\n//     });\n//     await axios.post('http://localhost:5000/employees', formData, {\n//       headers: {\n//         'x-auth-token': localStorage.getItem('token'),\n//         'Content-Type': 'multipart/form-data',\n//       },\n//     });\n//     window.location.href = '/dashboard';\n//   };\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={handleChange} required />\n//       <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\n//       <input type=\"text\" name=\"mobile\" placeholder=\"Mobile No\" onChange={handleChange} required />\n//       <select name=\"designation\" onChange={handleChange} required>\n//         <option value=\"\">Select Designation</option>\n//         <option value=\"HR\">HR</option>\n//         <option value=\"Manager\">Manager</option>\n//         <option value=\"Sales\">Sales</option>\n//       </select>\n//       <input type=\"radio\" name=\"gender\" value=\"M\" onChange={handleChange} required /> Male\n//       <input type=\"radio\" name=\"gender\" value=\"F\" onChange={handleChange} required /> Female\n//       <input type=\"checkbox\" name=\"course\" value=\"MCA\" onChange={handleChange} /> MCA\n//       <input type=\"checkbox\" name=\"course\" value=\"BCA\" onChange={handleChange} /> BCA\n//       <input type=\"checkbox\" name=\"course\" value=\"BSC\" onChange={handleChange} /> BSC\n//       <input type=\"file\" name=\"image\" onChange={handleFileChange} accept=\"image/jpeg,image/png\" required />\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n// export default CreateEmployee;\n// import React, { useState } from 'react';\n// const CreateEmployee = () => {\n//     const [formData, setFormData] = useState({\n//         name: '',\n//         email: '',\n//         mobile: '',\n//         designation: '',\n//         gender: '',\n//         course: '',\n//         image: null,\n//     });\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     };\n//     const handleFileChange = (e) => {\n//         setFormData({ ...formData, image: e.target.files[0] });\n//     };\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         const formDataToSend = new FormData();\n//         Object.keys(formData).forEach(key => {\n//             formDataToSend.append(key, formData[key]);\n//         });\n//         const token = localStorage.getItem('token');\n//         try {\n//             const response = await fetch('http://localhost:5005/employees', {\n//                 method: 'POST',\n//                 headers: { 'Authorization': `Bearer ${token}` },\n//                 body: formDataToSend,\n//             });\n//             const data = await response.json();\n//             if (data.employee) {\n//                 alert('Employee created');\n//             } else {\n//                 alert('Error creating employee');\n//             }\n//         } catch (error) {\n//             console.error('Error:', error);\n//         }\n//     };\n//     return (\n//         <div>\n//             <h2>Create Employee</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <input\n//                     type=\"text\"\n//                     name=\"name\"\n//                     placeholder=\"Name\"\n//                     value={formData.name}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     placeholder=\"Email\"\n//                     value={formData.email}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     name=\"mobile\"\n//                     placeholder=\"Mobile No\"\n//                     value={formData.mobile}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     name=\"designation\"\n//                     placeholder=\"Designation\"\n//                     value={formData.designation}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"radio\"\n//                     name=\"gender\"\n//                     value=\"M\"\n//                     checked={formData.gender === 'M'}\n//                     onChange={handleChange}\n//                 /> Male\n//                 <input\n//                     type=\"radio\"\n//                     name=\"gender\"\n//                     value=\"F\"\n//                     checked={formData.gender === 'F'}\n//                     onChange={handleChange}\n//                 /> Female\n//                 <input\n//                     type=\"checkbox\"\n//                     name=\"course\"\n//                     value=\"MCA\"\n//                     checked={formData.course === 'MCA'}\n//                     onChange={handleChange}\n//                 /> MCA\n//                 <input\n//                     type=\"checkbox\"\n//                     name=\"course\"\n//                     value=\"BCA\"\n//                     checked={formData.course === 'BCA'}\n//                     onChange={handleChange}\n//                 /> BCA\n//                 <input\n//                     type=\"checkbox\"\n//                     name=\"course\"\n//                     value=\"BSC\"\n//                     checked={formData.course === 'BSC'}\n//                     onChange={handleChange}\n//                 /> BSC\n//                 <input\n//                     type=\"file\"\n//                     name=\"image\"\n//                     onChange={handleFileChange}\n//                 />\n//                 <button type=\"submit\">Submit</button>\n//             </form>\n//         </div>\n//     );\n// };\n// export default CreateEmployee;\n// import React, { useState } from 'react';\n// const CreateEmployee = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n//   const handleFileChange = (e) => {\n//     setFormData({ ...formData, image: e.target.files[0] });\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formDataToSend = new FormData();\n//     Object.keys(formData).forEach(key => {\n//       formDataToSend.append(key, formData[key]);\n//     });\n//     const token = localStorage.getItem('token');\n//     try {\n//       const response = await fetch('http://localhost:5005/employees', {\n//         method: 'POST',\n//         headers: { 'Authorization': `Bearer ${token}` },\n//         body: formDataToSend,\n//       });\n//       const data = await response.json();\n//       if (data.employee) {\n//         alert('Employee created');\n//       } else {\n//         alert('Error creating employee');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n//   return (\n//     <div>\n//       <h2>Create Employee</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           placeholder=\"Name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           placeholder=\"Email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"mobile\"\n//           placeholder=\"Mobile No\"\n//           value={formData.mobile}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"designation\"\n//           placeholder=\"Designation\"\n//           value={formData.designation}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"radio\"\n//           name=\"gender\"\n//           value=\"M\"\n//           checked={formData.gender === 'M'}\n//           onChange={handleChange}\n//         /> Male\n//         <input\n//           type=\"radio\"\n//           name=\"gender\"\n//           value=\"F\"\n//           checked={formData.gender === 'F'}\n//           onChange={handleChange}\n//         /> Female\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"MCA\"\n//           checked={formData.course === 'MCA'}\n//           onChange={handleChange}\n//         /> MCA\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"BCA\"\n//           checked={formData.course === 'BCA'}\n//           onChange={handleChange}\n//         /> BCA\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"BSC\"\n//           checked={formData.course === 'BSC'}\n//           onChange={handleChange}\n//         /> BSC\n//         <input\n//           type=\"file\"\n//           name=\"image\"\n//           onChange={handleFileChange}\n//         />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n// export default CreateEmployee;\nimport React,{useState}from'react';import{Link,useNavigate}from'react-router-dom';import'./styles/CreateEmployee.css';// Assuming you have CSS for styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreateEmployee=()=>{const[employee,setEmployee]=useState({name:'',email:'',mobile:'',designation:'HR',gender:'M',course:[],image:null});const navigate=useNavigate();const handleSubmit=e=>{e.preventDefault();// Add validation and submit logic here\nconsole.log('Employee data:',employee);navigate('/employee-list');};const handleCheckboxChange=e=>{const{value,checked}=e.target;if(checked){setEmployee(prevState=>({...prevState,course:[...prevState.course,value]}));}else{setEmployee(prevState=>({...prevState,course:prevState.course.filter(course=>course!==value)}));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"create-employee\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"nav\",children:[/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",children:\"Home\"}),/*#__PURE__*/_jsx(Link,{to:\"/employee-list\",children:\"EmployeeList\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[\"Suruchi Sharma \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),children:\"Logout\"})]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create Employee\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:employee.name,onChange:e=>setEmployee({...employee,name:e.target.value}),placeholder:\"Name\",required:true})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:employee.email,onChange:e=>setEmployee({...employee,email:e.target.value}),placeholder:\"Email\",required:true})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:employee.mobile,onChange:e=>setEmployee({...employee,mobile:e.target.value}),placeholder:\"Mobile No\",required:true})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"select\",{value:employee.designation,onChange:e=>setEmployee({...employee,designation:e.target.value}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"HR\",children:\"HR\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Manager\",children:\"Manager\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Sales\",children:\"Sales\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Developer\",children:\"Developer\"})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"gender\",value:\"M\",checked:employee.gender==='M',onChange:e=>setEmployee({...employee,gender:e.target.value})}),\"Male\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"gender\",value:\"F\",checked:employee.gender==='F',onChange:e=>setEmployee({...employee,gender:e.target.value})}),\"Female\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:\"MCA\",checked:employee.course.includes('MCA'),onChange:handleCheckboxChange}),\"MCA\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:\"BCA\",checked:employee.course.includes('BCA'),onChange:handleCheckboxChange}),\"BCA\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:\"BE\",checked:employee.course.includes('BE'),onChange:handleCheckboxChange}),\"BE\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:\"B-Tech\",checked:employee.course.includes('B-Tech'),onChange:handleCheckboxChange}),\"B-Tech\"]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:e=>setEmployee({...employee,image:e.target.files[0]}),required:true})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]})]});};export default CreateEmployee;// // src/components/CreateEmployee.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './styles/CreateEmployee.css';\n// const CreateEmployee = () => {\n//   const [employeeData, setEmployeeData] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: [],\n//     image: null,\n//   });\n//   const handleChange = (e) => {\n//     setEmployeeData({ ...employeeData, [e.target.name]: e.target.value });\n//   };\n//   const handleFileChange = (e) => {\n//     setEmployeeData({ ...employeeData, image: e.target.files[0] });\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(employeeData).forEach(key => formData.append(key, employeeData[key]));\n//     try {\n//       await axios.post('http://localhost:5005/employees', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       alert('Employee created successfully!');\n//     } catch (error) {\n//       console.error('Error creating employee:', error);\n//     }\n//   };\n//   return (\n//     <div className=\"create-employee-container\">\n//       <h2>Create Employee</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={employeeData.name}\n//           onChange={handleChange}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={employeeData.email}\n//           onChange={handleChange}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"mobile\"\n//           value={employeeData.mobile}\n//           onChange={handleChange}\n//           placeholder=\"Mobile No\"\n//           required\n//         />\n//         <select\n//           name=\"designation\"\n//           value={employeeData.designation}\n//           onChange={handleChange}\n//           required\n//         >\n//           <option value=\"\">Select Designation</option>\n//           <option value=\"HR\">HR</option>\n//           <option value=\"Manager\">Manager</option>\n//           <option value=\"Sales\">Sales</option>\n//           <option value=\"Developer\">Developer</option>\n//         </select>\n//         <div>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               name=\"gender\"\n//               value=\"Male\"\n//               checked={employeeData.gender === 'Male'}\n//               onChange={handleChange}\n//             />\n//             Male\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               name=\"gender\"\n//               value=\"Female\"\n//               checked={employeeData.gender === 'Female'}\n//               onChange={handleChange}\n//             />\n//             Female\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"MCA\"\n//               checked={employeeData.course.includes('MCA')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'MCA'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'MCA') });\n//                 }\n//               }}\n//             />\n//             MCA\n//           </label>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"BCA\"\n//               checked={employeeData.course.includes('BCA')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'BCA'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'BCA') });\n//                 }\n//               }}\n//             />\n//             BCA\n//           </label>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"BSC\"\n//               checked={employeeData.course.includes('BSC')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'BSC'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'BSC') });\n//                 }\n//               }}\n//             />\n//             BSC\n//           </label>\n//         </div>\n//         <input type=\"file\" name=\"image\" onChange={handleFileChange} />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n// export default CreateEmployee;","map":{"version":3,"names":["React","useState","Link","useNavigate","jsx","_jsx","jsxs","_jsxs","CreateEmployee","employee","setEmployee","name","email","mobile","designation","gender","course","image","navigate","handleSubmit","e","preventDefault","console","log","handleCheckboxChange","value","checked","target","prevState","filter","className","children","to","onClick","onSubmit","type","onChange","placeholder","required","includes","files"],"sources":["/Users/prabhatkumar/Downloads/mern-employee-management/frontend/src/components/CreateEmployee.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const CreateEmployee = () => {\n//   const [form, setForm] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: [],\n//     image: null,\n//   });\n\n//   const handleChange = (e) => {\n//     setForm({\n//       ...form,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setForm({\n//       ...form,\n//       image: e.target.files[0],\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(form).forEach((key) => {\n//       formData.append(key, form[key]);\n//     });\n//     await axios.post('http://localhost:5000/employees', formData, {\n//       headers: {\n//         'x-auth-token': localStorage.getItem('token'),\n//         'Content-Type': 'multipart/form-data',\n//       },\n//     });\n//     window.location.href = '/dashboard';\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={handleChange} required />\n//       <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\n//       <input type=\"text\" name=\"mobile\" placeholder=\"Mobile No\" onChange={handleChange} required />\n//       <select name=\"designation\" onChange={handleChange} required>\n//         <option value=\"\">Select Designation</option>\n//         <option value=\"HR\">HR</option>\n//         <option value=\"Manager\">Manager</option>\n//         <option value=\"Sales\">Sales</option>\n//       </select>\n//       <input type=\"radio\" name=\"gender\" value=\"M\" onChange={handleChange} required /> Male\n//       <input type=\"radio\" name=\"gender\" value=\"F\" onChange={handleChange} required /> Female\n//       <input type=\"checkbox\" name=\"course\" value=\"MCA\" onChange={handleChange} /> MCA\n//       <input type=\"checkbox\" name=\"course\" value=\"BCA\" onChange={handleChange} /> BCA\n//       <input type=\"checkbox\" name=\"course\" value=\"BSC\" onChange={handleChange} /> BSC\n//       <input type=\"file\" name=\"image\" onChange={handleFileChange} accept=\"image/jpeg,image/png\" required />\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n\n// export default CreateEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n\n// const CreateEmployee = () => {\n//     const [formData, setFormData] = useState({\n//         name: '',\n//         email: '',\n//         mobile: '',\n//         designation: '',\n//         gender: '',\n//         course: '',\n//         image: null,\n//     });\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     };\n\n//     const handleFileChange = (e) => {\n//         setFormData({ ...formData, image: e.target.files[0] });\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         const formDataToSend = new FormData();\n//         Object.keys(formData).forEach(key => {\n//             formDataToSend.append(key, formData[key]);\n//         });\n\n//         const token = localStorage.getItem('token');\n//         try {\n//             const response = await fetch('http://localhost:5005/employees', {\n//                 method: 'POST',\n//                 headers: { 'Authorization': `Bearer ${token}` },\n//                 body: formDataToSend,\n//             });\n//             const data = await response.json();\n//             if (data.employee) {\n//                 alert('Employee created');\n//             } else {\n//                 alert('Error creating employee');\n//             }\n//         } catch (error) {\n//             console.error('Error:', error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Create Employee</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <input\n//                     type=\"text\"\n//                     name=\"name\"\n//                     placeholder=\"Name\"\n//                     value={formData.name}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     placeholder=\"Email\"\n//                     value={formData.email}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     name=\"mobile\"\n//                     placeholder=\"Mobile No\"\n//                     value={formData.mobile}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     name=\"designation\"\n//                     placeholder=\"Designation\"\n//                     value={formData.designation}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"radio\"\n//                     name=\"gender\"\n//                     value=\"M\"\n//                     checked={formData.gender === 'M'}\n//                     onChange={handleChange}\n//                 /> Male\n//                 <input\n//                     type=\"radio\"\n//                     name=\"gender\"\n//                     value=\"F\"\n//                     checked={formData.gender === 'F'}\n//                     onChange={handleChange}\n//                 /> Female\n//                 <input\n//                     type=\"checkbox\"\n//                     name=\"course\"\n//                     value=\"MCA\"\n//                     checked={formData.course === 'MCA'}\n//                     onChange={handleChange}\n//                 /> MCA\n//                 <input\n//                     type=\"checkbox\"\n//                     name=\"course\"\n//                     value=\"BCA\"\n//                     checked={formData.course === 'BCA'}\n//                     onChange={handleChange}\n//                 /> BCA\n//                 <input\n//                     type=\"checkbox\"\n//                     name=\"course\"\n//                     value=\"BSC\"\n//                     checked={formData.course === 'BSC'}\n//                     onChange={handleChange}\n//                 /> BSC\n//                 <input\n//                     type=\"file\"\n//                     name=\"image\"\n//                     onChange={handleFileChange}\n//                 />\n//                 <button type=\"submit\">Submit</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default CreateEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n\n// const CreateEmployee = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setFormData({ ...formData, image: e.target.files[0] });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formDataToSend = new FormData();\n//     Object.keys(formData).forEach(key => {\n//       formDataToSend.append(key, formData[key]);\n//     });\n\n//     const token = localStorage.getItem('token');\n//     try {\n//       const response = await fetch('http://localhost:5005/employees', {\n//         method: 'POST',\n//         headers: { 'Authorization': `Bearer ${token}` },\n//         body: formDataToSend,\n//       });\n//       const data = await response.json();\n//       if (data.employee) {\n//         alert('Employee created');\n//       } else {\n//         alert('Error creating employee');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create Employee</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           placeholder=\"Name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           placeholder=\"Email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"mobile\"\n//           placeholder=\"Mobile No\"\n//           value={formData.mobile}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"designation\"\n//           placeholder=\"Designation\"\n//           value={formData.designation}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"radio\"\n//           name=\"gender\"\n//           value=\"M\"\n//           checked={formData.gender === 'M'}\n//           onChange={handleChange}\n//         /> Male\n//         <input\n//           type=\"radio\"\n//           name=\"gender\"\n//           value=\"F\"\n//           checked={formData.gender === 'F'}\n//           onChange={handleChange}\n//         /> Female\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"MCA\"\n//           checked={formData.course === 'MCA'}\n//           onChange={handleChange}\n//         /> MCA\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"BCA\"\n//           checked={formData.course === 'BCA'}\n//           onChange={handleChange}\n//         /> BCA\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"BSC\"\n//           checked={formData.course === 'BSC'}\n//           onChange={handleChange}\n//         /> BSC\n//         <input\n//           type=\"file\"\n//           name=\"image\"\n//           onChange={handleFileChange}\n//         />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreateEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './styles/CreateEmployee.css'; // Assuming you have CSS for styling\n\nconst CreateEmployee = () => {\n  const [employee, setEmployee] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    designation: 'HR',\n    gender: 'M',\n    course: [],\n    image: null,\n  });\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Add validation and submit logic here\n    console.log('Employee data:', employee);\n    navigate('/employee-list');\n  };\n\n  const handleCheckboxChange = (e) => {\n    const { value, checked } = e.target;\n    if (checked) {\n      setEmployee((prevState) => ({\n        ...prevState,\n        course: [...prevState.course, value],\n      }));\n    } else {\n      setEmployee((prevState) => ({\n        ...prevState,\n        course: prevState.course.filter((course) => course !== value),\n      }));\n    }\n  };\n\n  return (\n    <div className=\"create-employee\">\n      <div className=\"header\">\n        <div className=\"nav\">\n          <Link to=\"/dashboard\">Home</Link>\n          <Link to=\"/employee-list\">EmployeeList</Link>\n        </div>\n        <div className=\"user-info\">\n          Suruchi Sharma <button onClick={() => navigate('/')}>Logout</button>\n        </div>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <h2>Create Employee</h2>\n        <div>\n          <input\n            type=\"text\"\n            value={employee.name}\n            onChange={(e) => setEmployee({ ...employee, name: e.target.value })}\n            placeholder=\"Name\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"email\"\n            value={employee.email}\n            onChange={(e) => setEmployee({ ...employee, email: e.target.value })}\n            placeholder=\"Email\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            value={employee.mobile}\n            onChange={(e) => setEmployee({ ...employee, mobile: e.target.value })}\n            placeholder=\"Mobile No\"\n            required\n          />\n        </div>\n        <div>\n          <select\n            value={employee.designation}\n            onChange={(e) => setEmployee({ ...employee, designation: e.target.value })}\n            required\n          >\n            <option value=\"HR\">HR</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Sales\">Sales</option>\n            <option value=\"Developer\">Developer</option>\n          </select>\n        </div>\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              value=\"M\"\n              checked={employee.gender === 'M'}\n              onChange={(e) => setEmployee({ ...employee, gender: e.target.value })}\n            />\n            Male\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              value=\"F\"\n              checked={employee.gender === 'F'}\n              onChange={(e) => setEmployee({ ...employee, gender: e.target.value })}\n            />\n            Female\n          </label>\n        </div>\n        <div>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"MCA\"\n              checked={employee.course.includes('MCA')}\n              onChange={handleCheckboxChange}\n            />\n            MCA\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"BCA\"\n              checked={employee.course.includes('BCA')}\n              onChange={handleCheckboxChange}\n            />\n            BCA\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"BE\"\n              checked={employee.course.includes('BE')}\n              onChange={handleCheckboxChange}\n            />\n            BE\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"B-Tech\"\n              checked={employee.course.includes('B-Tech')}\n              onChange={handleCheckboxChange}\n            />\n            B-Tech\n          </label>\n        </div>\n        <div>\n          <input\n            type=\"file\"\n            onChange={(e) => setEmployee({ ...employee, image: e.target.files[0] })}\n            required\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // src/components/CreateEmployee.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './styles/CreateEmployee.css';\n\n// const CreateEmployee = () => {\n//   const [employeeData, setEmployeeData] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: [],\n//     image: null,\n//   });\n\n//   const handleChange = (e) => {\n//     setEmployeeData({ ...employeeData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setEmployeeData({ ...employeeData, image: e.target.files[0] });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(employeeData).forEach(key => formData.append(key, employeeData[key]));\n\n//     try {\n//       await axios.post('http://localhost:5005/employees', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       alert('Employee created successfully!');\n//     } catch (error) {\n//       console.error('Error creating employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-employee-container\">\n//       <h2>Create Employee</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={employeeData.name}\n//           onChange={handleChange}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={employeeData.email}\n//           onChange={handleChange}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"mobile\"\n//           value={employeeData.mobile}\n//           onChange={handleChange}\n//           placeholder=\"Mobile No\"\n//           required\n//         />\n//         <select\n//           name=\"designation\"\n//           value={employeeData.designation}\n//           onChange={handleChange}\n//           required\n//         >\n//           <option value=\"\">Select Designation</option>\n//           <option value=\"HR\">HR</option>\n//           <option value=\"Manager\">Manager</option>\n//           <option value=\"Sales\">Sales</option>\n//           <option value=\"Developer\">Developer</option>\n//         </select>\n//         <div>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               name=\"gender\"\n//               value=\"Male\"\n//               checked={employeeData.gender === 'Male'}\n//               onChange={handleChange}\n//             />\n//             Male\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               name=\"gender\"\n//               value=\"Female\"\n//               checked={employeeData.gender === 'Female'}\n//               onChange={handleChange}\n//             />\n//             Female\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"MCA\"\n//               checked={employeeData.course.includes('MCA')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'MCA'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'MCA') });\n//                 }\n//               }}\n//             />\n//             MCA\n//           </label>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"BCA\"\n//               checked={employeeData.course.includes('BCA')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'BCA'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'BCA') });\n//                 }\n//               }}\n//             />\n//             BCA\n//           </label>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"BSC\"\n//               checked={employeeData.course.includes('BSC')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'BSC'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'BSC') });\n//                 }\n//               }}\n//             />\n//             BSC\n//           </label>\n//         </div>\n//         <input type=\"file\" name=\"image\" onChange={handleFileChange} />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreateEmployee;\n"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA8BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA8BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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":[]},"metadata":{},"sourceType":"module"}