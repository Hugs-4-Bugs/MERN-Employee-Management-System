{"ast":null,"code":"var _jsxFileName = \"/Users/prabhatkumar/Downloads/mern-employee-management/frontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// // Example component for login\n// const Login = () => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [token, setToken] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n//       setToken(response.data.token);\n//       // Store the token in localStorage or state as needed\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <input\n//         type=\"text\"\n//         value={userName}\n//         onChange={(e) => setUserName(e.target.value)}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n\n// // Example component for managing employees\n// const EmployeeManagement = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/employees`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n//           },\n//         });\n//         setEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n\n//     fetchEmployees();\n//   }, []);\n\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       await axios.post(`${API_URL}/employees`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error creating employee:', error);\n//     }\n//   };\n\n//   const handleUpdateEmployee = async (id) => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       await axios.put(`${API_URL}/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee Management</h2>\n//       {/* Form for creating or updating employees */}\n//       <input\n//         type=\"text\"\n//         value={newEmployee.name}\n//         onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n//         placeholder=\"Name\"\n//       />\n//       {/* Add other input fields similarly */}\n//       <input\n//         type=\"file\"\n//         onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n//       />\n//       <button onClick={handleCreateEmployee}>Create Employee</button>\n\n//       <h3>Employee List</h3>\n//       <ul>\n//         {employees.map(emp => (\n//           <li key={emp._id}>\n//             {emp.name} - {emp.email}\n//             <button onClick={() => handleUpdateEmployee(emp._id)}>Update</button>\n//             <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// const App = () => {\n//   return (\n//     <div>\n//       <Login />\n//       <EmployeeManagement />\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5005'; // Backend URL\n\n// Example component for login\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        userName,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n      onLogin(); // Notify parent about successful login\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userName,\n      onChange: e => setUserName(e.target.value),\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n\n// Example component for managing employees\n_s(Login, \"4VuJrN/ipsRQcM1gZETKYGzuiZk=\");\n_c = Login;\nconst EmployeeManagement = () => {\n  _s2();\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    designation: '',\n    gender: '',\n    course: '',\n    image: null\n  });\n  const [editingEmployee, setEditingEmployee] = useState(null);\n\n  // Fetch all employees\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/employees`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}` // Use the token from login\n          }\n        });\n        setEmployees(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n    fetchEmployees();\n  }, []);\n  const handleCreateEmployee = async () => {\n    const formData = new FormData();\n    Object.keys(newEmployee).forEach(key => {\n      formData.append(key, newEmployee[key]);\n    });\n    try {\n      if (editingEmployee) {\n        await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      } else {\n        await axios.post(`${API_URL}/employees`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n      }\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setEmployees(response.data);\n      setNewEmployee({\n        name: '',\n        email: '',\n        mobile: '',\n        designation: '',\n        gender: '',\n        course: '',\n        image: null\n      });\n      setEditingEmployee(null); // Clear the editing state\n    } catch (error) {\n      console.error('Error saving employee:', error);\n    }\n  };\n  const handleUpdateEmployee = employee => {\n    setNewEmployee(employee);\n    setEditingEmployee(employee);\n  };\n  const handleDeleteEmployee = async id => {\n    try {\n      await axios.delete(`${API_URL}/employees/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleCreateEmployee();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newEmployee.name,\n        onChange: e => setNewEmployee({\n          ...newEmployee,\n          name: e.target.value\n        }),\n        placeholder: \"Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: newEmployee.email,\n        onChange: e => setNewEmployee({\n          ...newEmployee,\n          email: e.target.value\n        }),\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newEmployee.mobile,\n        onChange: e => setNewEmployee({\n          ...newEmployee,\n          mobile: e.target.value\n        }),\n        placeholder: \"Mobile No\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newEmployee.designation,\n        onChange: e => setNewEmployee({\n          ...newEmployee,\n          designation: e.target.value\n        }),\n        placeholder: \"Designation\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newEmployee.gender,\n        onChange: e => setNewEmployee({\n          ...newEmployee,\n          gender: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"M\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"F\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newEmployee.course,\n        onChange: e => setNewEmployee({\n          ...newEmployee,\n          course: e.target.value\n        }),\n        placeholder: \"Course\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setNewEmployee({\n          ...newEmployee,\n          image: e.target.files[0]\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingEmployee ? 'Update Employee' : 'Create Employee'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [emp.name, \" - \", emp.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateEmployee(emp),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteEmployee(emp._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)]\n      }, emp._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n};\n_s2(EmployeeManagement, \"SwiptYDOXuwIRhcIT3JXViFVvgI=\");\n_c2 = EmployeeManagement;\nconst App = () => {\n  _s3();\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(EmployeeManagement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 56\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 5\n  }, this);\n};\n_s3(App, \"neGiuzlBFUXGLAiNpdWWxu/zEy8=\");\n_c3 = App;\nexport default App;\n\n// // src/App.js\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\n// import Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import Dashboard from './components/Dashboard';\n// import EmployeeList from './components/EmployeeList';\n// import CreateEmployee from './components/CreateEmployee';\n// import EditEmployee from './components/EditEmployee';\n// import TestComponent from './components/TestComponent';\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// const App = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n//   const [editingEmployee, setEditingEmployee] = useState(null);\n//   const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n\n//   useEffect(() => {\n//     if (isLoggedIn) {\n//       const fetchEmployees = async () => {\n//         try {\n//           const response = await axios.get(`${API_URL}/employees`, {\n//             headers: {\n//               Authorization: `Bearer ${localStorage.getItem('token')}`,\n//             },\n//           });\n//           setEmployees(response.data);\n//         } catch (error) {\n//           console.error('Error fetching employees:', error);\n//         }\n//       };\n\n//       fetchEmployees();\n//     }\n//   }, [isLoggedIn]);\n\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       if (editingEmployee) {\n//         await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       } else {\n//         await axios.post(`${API_URL}/employees`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       }\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//       setNewEmployee({\n//         name: '',\n//         email: '',\n//         mobile: '',\n//         designation: '',\n//         gender: '',\n//         course: '',\n//         image: null,\n//       });\n//       setEditingEmployee(null); // Clear the editing state\n//     } catch (error) {\n//       console.error('Error saving employee:', error);\n//     }\n//   };\n\n//   const handleUpdateEmployee = (employee) => {\n//     setNewEmployee(employee);\n//     setEditingEmployee(employee);\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setIsLoggedIn(false);\n//   };\n\n//   return (\n//     <Router>\n//       {isLoggedIn && <Navbar onLogout={handleLogout} />}\n//       <Routes>\n//         <Route path=\"/\" element={isLoggedIn ? <Dashboard /> : <Register onLogin={handleLogin} />} />\n//         <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n//         <Route path=\"/register\" element={<Register onLogin={handleLogin} />} />\n//         <Route path=\"/dashboard\" element={isLoggedIn ? <Dashboard /> : <Login onLogin={handleLogin} />} />\n//         <Route path=\"/employee-list\" element={isLoggedIn ? <EmployeeList employees={employees} onUpdateEmployee={handleUpdateEmployee} onDeleteEmployee={handleDeleteEmployee} /> : <Login onLogin={handleLogin} />} />\n//         <Route path=\"/create-employee\" element={isLoggedIn ? <CreateEmployee newEmployee={newEmployee} setNewEmployee={setNewEmployee} handleCreateEmployee={handleCreateEmployee} /> : <Login onLogin={handleLogin} />} />\n//         <Route path=\"/edit-employee/:id\" element={isLoggedIn ? <EditEmployee handleUpdateEmployee={handleUpdateEmployee} /> : <Login onLogin={handleLogin} />} />\n//         <Route path=\"/test\" element={<TestComponent />} />\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"EmployeeManagement\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","Login","onLogin","_s","userName","setUserName","password","setPassword","handleLogin","response","post","localStorage","setItem","data","token","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","EmployeeManagement","_s2","employees","setEmployees","newEmployee","setNewEmployee","name","email","mobile","designation","gender","course","image","editingEmployee","setEditingEmployee","fetchEmployees","get","headers","Authorization","getItem","handleCreateEmployee","formData","FormData","Object","keys","forEach","key","append","put","_id","handleUpdateEmployee","employee","handleDeleteEmployee","id","delete","onSubmit","preventDefault","required","files","map","emp","_c2","App","_s3","isLoggedIn","setIsLoggedIn","_c3","$RefreshReg$"],"sources":["/Users/prabhatkumar/Downloads/mern-employee-management/frontend/src/App.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// // Example component for login\n// const Login = () => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [token, setToken] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n//       setToken(response.data.token);\n//       // Store the token in localStorage or state as needed\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <input\n//         type=\"text\"\n//         value={userName}\n//         onChange={(e) => setUserName(e.target.value)}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n\n// // Example component for managing employees\n// const EmployeeManagement = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/employees`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n//           },\n//         });\n//         setEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n\n//     fetchEmployees();\n//   }, []);\n\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       await axios.post(`${API_URL}/employees`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error creating employee:', error);\n//     }\n//   };\n\n//   const handleUpdateEmployee = async (id) => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       await axios.put(`${API_URL}/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee Management</h2>\n//       {/* Form for creating or updating employees */}\n//       <input\n//         type=\"text\"\n//         value={newEmployee.name}\n//         onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n//         placeholder=\"Name\"\n//       />\n//       {/* Add other input fields similarly */}\n//       <input\n//         type=\"file\"\n//         onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n//       />\n//       <button onClick={handleCreateEmployee}>Create Employee</button>\n\n//       <h3>Employee List</h3>\n//       <ul>\n//         {employees.map(emp => (\n//           <li key={emp._id}>\n//             {emp.name} - {emp.email}\n//             <button onClick={() => handleUpdateEmployee(emp._id)}>Update</button>\n//             <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// const App = () => {\n//   return (\n//     <div>\n//       <Login />\n//       <EmployeeManagement />\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:5005'; // Backend URL\n\n// Example component for login\nconst Login = ({ onLogin }) => {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n      localStorage.setItem('token', response.data.token);\n      onLogin(); // Notify parent about successful login\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <input\n        type=\"text\"\n        value={userName}\n        onChange={(e) => setUserName(e.target.value)}\n        placeholder=\"Username\"\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n      />\n      <button onClick={handleLogin}>Login</button>\n    </div>\n  );\n};\n\n// Example component for managing employees\nconst EmployeeManagement = () => {\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    designation: '',\n    gender: '',\n    course: '',\n    image: null,\n  });\n  const [editingEmployee, setEditingEmployee] = useState(null);\n\n  // Fetch all employees\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/employees`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n          },\n        });\n        setEmployees(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n\n    fetchEmployees();\n  }, []);\n\n  const handleCreateEmployee = async () => {\n    const formData = new FormData();\n    Object.keys(newEmployee).forEach(key => {\n      formData.append(key, newEmployee[key]);\n    });\n\n    try {\n      if (editingEmployee) {\n        await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n      } else {\n        await axios.post(`${API_URL}/employees`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n      }\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setEmployees(response.data);\n      setNewEmployee({\n        name: '',\n        email: '',\n        mobile: '',\n        designation: '',\n        gender: '',\n        course: '',\n        image: null,\n      });\n      setEditingEmployee(null); // Clear the editing state\n    } catch (error) {\n      console.error('Error saving employee:', error);\n    }\n  };\n\n  const handleUpdateEmployee = (employee) => {\n    setNewEmployee(employee);\n    setEditingEmployee(employee);\n  };\n\n  const handleDeleteEmployee = async (id) => {\n    try {\n      await axios.delete(`${API_URL}/employees/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Employee Management</h2>\n      <form onSubmit={(e) => { e.preventDefault(); handleCreateEmployee(); }}>\n        <input\n          type=\"text\"\n          value={newEmployee.name}\n          onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n          placeholder=\"Name\"\n          required\n        />\n        <input\n          type=\"email\"\n          value={newEmployee.email}\n          onChange={(e) => setNewEmployee({ ...newEmployee, email: e.target.value })}\n          placeholder=\"Email\"\n          required\n        />\n        <input\n          type=\"text\"\n          value={newEmployee.mobile}\n          onChange={(e) => setNewEmployee({ ...newEmployee, mobile: e.target.value })}\n          placeholder=\"Mobile No\"\n          required\n        />\n        <input\n          type=\"text\"\n          value={newEmployee.designation}\n          onChange={(e) => setNewEmployee({ ...newEmployee, designation: e.target.value })}\n          placeholder=\"Designation\"\n          required\n        />\n        <select\n          value={newEmployee.gender}\n          onChange={(e) => setNewEmployee({ ...newEmployee, gender: e.target.value })}\n          required\n        >\n          <option value=\"\">Select Gender</option>\n          <option value=\"M\">Male</option>\n          <option value=\"F\">Female</option>\n        </select>\n        <input\n          type=\"text\"\n          value={newEmployee.course}\n          onChange={(e) => setNewEmployee({ ...newEmployee, course: e.target.value })}\n          placeholder=\"Course\"\n          required\n        />\n        <input\n          type=\"file\"\n          onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n        />\n        <button type=\"submit\">{editingEmployee ? 'Update Employee' : 'Create Employee'}</button>\n      </form>\n\n      <h3>Employee List</h3>\n      <ul>\n        {employees.map(emp => (\n          <li key={emp._id}>\n            {emp.name} - {emp.email}\n            <button onClick={() => handleUpdateEmployee(emp)}>Update</button>\n            <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <div>\n      {!isLoggedIn ? <Login onLogin={handleLogin} /> : <EmployeeManagement />}\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // src/App.js\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\n// import Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import Dashboard from './components/Dashboard';\n// import EmployeeList from './components/EmployeeList';\n// import CreateEmployee from './components/CreateEmployee';\n// import EditEmployee from './components/EditEmployee';\n// import TestComponent from './components/TestComponent';\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// const App = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n//   const [editingEmployee, setEditingEmployee] = useState(null);\n//   const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n\n//   useEffect(() => {\n//     if (isLoggedIn) {\n//       const fetchEmployees = async () => {\n//         try {\n//           const response = await axios.get(`${API_URL}/employees`, {\n//             headers: {\n//               Authorization: `Bearer ${localStorage.getItem('token')}`,\n//             },\n//           });\n//           setEmployees(response.data);\n//         } catch (error) {\n//           console.error('Error fetching employees:', error);\n//         }\n//       };\n\n//       fetchEmployees();\n//     }\n//   }, [isLoggedIn]);\n\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       if (editingEmployee) {\n//         await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       } else {\n//         await axios.post(`${API_URL}/employees`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       }\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//       setNewEmployee({\n//         name: '',\n//         email: '',\n//         mobile: '',\n//         designation: '',\n//         gender: '',\n//         course: '',\n//         image: null,\n//       });\n//       setEditingEmployee(null); // Clear the editing state\n//     } catch (error) {\n//       console.error('Error saving employee:', error);\n//     }\n//   };\n\n//   const handleUpdateEmployee = (employee) => {\n//     setNewEmployee(employee);\n//     setEditingEmployee(employee);\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setIsLoggedIn(false);\n//   };\n\n//   return (\n//     <Router>\n//       {isLoggedIn && <Navbar onLogout={handleLogout} />}\n//       <Routes>\n//         <Route path=\"/\" element={isLoggedIn ? <Dashboard /> : <Register onLogin={handleLogin} />} />\n//         <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n//         <Route path=\"/register\" element={<Register onLogin={handleLogin} />} />\n//         <Route path=\"/dashboard\" element={isLoggedIn ? <Dashboard /> : <Login onLogin={handleLogin} />} />\n//         <Route path=\"/employee-list\" element={isLoggedIn ? <EmployeeList employees={employees} onUpdateEmployee={handleUpdateEmployee} onDeleteEmployee={handleDeleteEmployee} /> : <Login onLogin={handleLogin} />} />\n//         <Route path=\"/create-employee\" element={isLoggedIn ? <CreateEmployee newEmployee={newEmployee} setNewEmployee={setNewEmployee} handleCreateEmployee={handleCreateEmployee} /> : <Login onLogin={handleLogin} />} />\n//         <Route path=\"/edit-employee/:id\" element={isLoggedIn ? <EditEmployee handleUpdateEmployee={handleUpdateEmployee} /> : <Login onLogin={handleLogin} />} />\n//         <Route path=\"/test\" element={<TestComponent />} />\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n"],"mappings":";;;;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAqCA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC;AACA,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,W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","ignoreList":[]},"metadata":{},"sourceType":"module"}