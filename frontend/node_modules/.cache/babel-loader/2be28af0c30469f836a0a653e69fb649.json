{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// const API_URL = 'http://localhost:5005'; // Backend URL\n// // Example component for login\n// const Login = () => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [token, setToken] = useState('');\n//   const handleLogin = async () => {\n//     try {\n//       const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n//       setToken(response.data.token);\n//       // Store the token in localStorage or state as needed\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <input\n//         type=\"text\"\n//         value={userName}\n//         onChange={(e) => setUserName(e.target.value)}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n// // Example component for managing employees\n// const EmployeeManagement = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/employees`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n//           },\n//         });\n//         setEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n//     fetchEmployees();\n//   }, []);\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n//     try {\n//       await axios.post(`${API_URL}/employees`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error creating employee:', error);\n//     }\n//   };\n//   const handleUpdateEmployee = async (id) => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n//     try {\n//       await axios.put(`${API_URL}/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n//   return (\n//     <div>\n//       <h2>Employee Management</h2>\n//       {/* Form for creating or updating employees */}\n//       <input\n//         type=\"text\"\n//         value={newEmployee.name}\n//         onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n//         placeholder=\"Name\"\n//       />\n//       {/* Add other input fields similarly */}\n//       <input\n//         type=\"file\"\n//         onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n//       />\n//       <button onClick={handleCreateEmployee}>Create Employee</button>\n//       <h3>Employee List</h3>\n//       <ul>\n//         {employees.map(emp => (\n//           <li key={emp._id}>\n//             {emp.name} - {emp.email}\n//             <button onClick={() => handleUpdateEmployee(emp._id)}>Update</button>\n//             <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n// const App = () => {\n//   return (\n//     <div>\n//       <Login />\n//       <EmployeeManagement />\n//     </div>\n//   );\n// };\n// export default App;\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// const API_URL = 'http://localhost:5005'; // Backend URL\n// // Example component for login\n// const Login = ({ onLogin }) => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n//   const handleLogin = async () => {\n//     try {\n//       const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n//       localStorage.setItem('token', response.data.token);\n//       onLogin(); // Notify parent about successful login\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <input\n//         type=\"text\"\n//         value={userName}\n//         onChange={(e) => setUserName(e.target.value)}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n// // Example component for managing employees\n// const EmployeeManagement = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n//   const [editingEmployee, setEditingEmployee] = useState(null);\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/employees`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n//           },\n//         });\n//         setEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n//     fetchEmployees();\n//   }, []);\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n//     try {\n//       if (editingEmployee) {\n//         await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       } else {\n//         await axios.post(`${API_URL}/employees`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       }\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//       setNewEmployee({\n//         name: '',\n//         email: '',\n//         mobile: '',\n//         designation: '',\n//         gender: '',\n//         course: '',\n//         image: null,\n//       });\n//       setEditingEmployee(null); // Clear the editing state\n//     } catch (error) {\n//       console.error('Error saving employee:', error);\n//     }\n//   };\n//   const handleUpdateEmployee = (employee) => {\n//     setNewEmployee(employee);\n//     setEditingEmployee(employee);\n//   };\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n//   return (\n//     <div>\n//       <h2>Employee Management</h2>\n//       <form onSubmit={(e) => { e.preventDefault(); handleCreateEmployee(); }}>\n//         <input\n//           type=\"text\"\n//           value={newEmployee.name}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           value={newEmployee.email}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, email: e.target.value })}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={newEmployee.mobile}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, mobile: e.target.value })}\n//           placeholder=\"Mobile No\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={newEmployee.designation}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, designation: e.target.value })}\n//           placeholder=\"Designation\"\n//           required\n//         />\n//         <select\n//           value={newEmployee.gender}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, gender: e.target.value })}\n//           required\n//         >\n//           <option value=\"\">Select Gender</option>\n//           <option value=\"M\">Male</option>\n//           <option value=\"F\">Female</option>\n//         </select>\n//         <input\n//           type=\"text\"\n//           value={newEmployee.course}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, course: e.target.value })}\n//           placeholder=\"Course\"\n//           required\n//         />\n//         <input\n//           type=\"file\"\n//           onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n//         />\n//         <button type=\"submit\">{editingEmployee ? 'Update Employee' : 'Create Employee'}</button>\n//       </form>\n//       <h3>Employee List</h3>\n//       <ul>\n//         {employees.map(emp => (\n//           <li key={emp._id}>\n//             {emp.name} - {emp.email}\n//             <button onClick={() => handleUpdateEmployee(emp)}>Update</button>\n//             <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n// const App = () => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n//   return (\n//     <div>\n//       {!isLoggedIn ? <Login onLogin={handleLogin} /> : <EmployeeManagement />}\n//     </div>\n//   );\n// };\n// export default App;\n// src/App.js\nimport React,{useState,useEffect}from'react';import{BrowserRouter as Router,Route,Routes}from'react-router-dom';import Navbar from'./components/Navbar';import Login from'./components/Login';import Register from'./components/Register';import Dashboard from'./components/Dashboard';import EmployeeList from'./components/EmployeeList';import CreateEmployee from'./components/CreateEmployee';import EditEmployee from'./components/EditEmployee';import TestComponent from'./components/TestComponent';import axios from'axios';import'./components/styles/App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL='http://localhost:5005';// Backend URL\nconst App=()=>{const[employees,setEmployees]=useState([]);const[newEmployee,setNewEmployee]=useState({name:'',email:'',mobile:'',designation:'',gender:'',course:'',image:null});const[editingEmployee,setEditingEmployee]=useState(null);const[isLoggedIn,setIsLoggedIn]=useState(!!localStorage.getItem('token'));useEffect(()=>{if(isLoggedIn){const fetchEmployees=async()=>{try{const response=await axios.get(\"\".concat(API_URL,\"/employees\"),{headers:{Authorization:\"Bearer \".concat(localStorage.getItem('token'))}});setEmployees(response.data);}catch(error){console.error('Error fetching employees:',error);}};fetchEmployees();}},[isLoggedIn]);const handleCreateEmployee=async()=>{const formData=new FormData();Object.keys(newEmployee).forEach(key=>{formData.append(key,newEmployee[key]);});try{if(editingEmployee){await axios.put(\"\".concat(API_URL,\"/employees/\").concat(editingEmployee._id),formData,{headers:{'Content-Type':'multipart/form-data',Authorization:\"Bearer \".concat(localStorage.getItem('token'))}});}else{await axios.post(\"\".concat(API_URL,\"/employees\"),formData,{headers:{'Content-Type':'multipart/form-data',Authorization:\"Bearer \".concat(localStorage.getItem('token'))}});}// Refresh the employee list\nconst response=await axios.get(\"\".concat(API_URL,\"/employees\"),{headers:{Authorization:\"Bearer \".concat(localStorage.getItem('token'))}});setEmployees(response.data);setNewEmployee({name:'',email:'',mobile:'',designation:'',gender:'',course:'',image:null});setEditingEmployee(null);// Clear the editing state\n}catch(error){console.error('Error saving employee:',error);}};const handleUpdateEmployee=employee=>{setNewEmployee(employee);setEditingEmployee(employee);};const handleDeleteEmployee=async id=>{try{await axios.delete(\"\".concat(API_URL,\"/employees/\").concat(id),{headers:{Authorization:\"Bearer \".concat(localStorage.getItem('token'))}});// Refresh the employee list\nconst response=await axios.get(\"\".concat(API_URL,\"/employees\"),{headers:{Authorization:\"Bearer \".concat(localStorage.getItem('token'))}});setEmployees(response.data);}catch(error){console.error('Error deleting employee:',error);}};const handleLogin=()=>{setIsLoggedIn(true);};const handleLogout=()=>{localStorage.removeItem('token');setIsLoggedIn(false);};return/*#__PURE__*/_jsxs(Router,{children:[isLoggedIn&&/*#__PURE__*/_jsx(Navbar,{onLogout:handleLogout}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:isLoggedIn?/*#__PURE__*/_jsx(Dashboard,{}):/*#__PURE__*/_jsx(Register,{onLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{onLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Register,{onLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:isLoggedIn?/*#__PURE__*/_jsx(Dashboard,{}):/*#__PURE__*/_jsx(Login,{onLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/employee-list\",element:isLoggedIn?/*#__PURE__*/_jsx(EmployeeList,{employees:employees,onUpdateEmployee:handleUpdateEmployee,onDeleteEmployee:handleDeleteEmployee}):/*#__PURE__*/_jsx(Login,{onLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/create-employee\",element:isLoggedIn?/*#__PURE__*/_jsx(CreateEmployee,{newEmployee:newEmployee,setNewEmployee:setNewEmployee,handleCreateEmployee:handleCreateEmployee}):/*#__PURE__*/_jsx(Login,{onLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/edit-employee/:id\",element:isLoggedIn?/*#__PURE__*/_jsx(EditEmployee,{handleUpdateEmployee:handleUpdateEmployee}):/*#__PURE__*/_jsx(Login,{onLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/test\",element:/*#__PURE__*/_jsx(TestComponent,{})})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navbar","Login","Register","Dashboard","EmployeeList","CreateEmployee","EditEmployee","TestComponent","axios","jsx","_jsx","jsxs","_jsxs","API_URL","App","employees","setEmployees","newEmployee","setNewEmployee","name","email","mobile","designation","gender","course","image","editingEmployee","setEditingEmployee","isLoggedIn","setIsLoggedIn","localStorage","getItem","fetchEmployees","response","get","concat","headers","Authorization","data","error","console","handleCreateEmployee","formData","FormData","Object","keys","forEach","key","append","put","_id","post","handleUpdateEmployee","employee","handleDeleteEmployee","id","delete","handleLogin","handleLogout","removeItem","children","onLogout","path","element","onLogin","onUpdateEmployee","onDeleteEmployee"],"sources":["/Users/prabhatkumar/Downloads/mern-employee-management/frontend/src/App.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// // Example component for login\n// const Login = () => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [token, setToken] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n//       setToken(response.data.token);\n//       // Store the token in localStorage or state as needed\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <input\n//         type=\"text\"\n//         value={userName}\n//         onChange={(e) => setUserName(e.target.value)}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n\n// // Example component for managing employees\n// const EmployeeManagement = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/employees`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n//           },\n//         });\n//         setEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n\n//     fetchEmployees();\n//   }, []);\n\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       await axios.post(`${API_URL}/employees`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error creating employee:', error);\n//     }\n//   };\n\n//   const handleUpdateEmployee = async (id) => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       await axios.put(`${API_URL}/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee Management</h2>\n//       {/* Form for creating or updating employees */}\n//       <input\n//         type=\"text\"\n//         value={newEmployee.name}\n//         onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n//         placeholder=\"Name\"\n//       />\n//       {/* Add other input fields similarly */}\n//       <input\n//         type=\"file\"\n//         onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n//       />\n//       <button onClick={handleCreateEmployee}>Create Employee</button>\n\n//       <h3>Employee List</h3>\n//       <ul>\n//         {employees.map(emp => (\n//           <li key={emp._id}>\n//             {emp.name} - {emp.email}\n//             <button onClick={() => handleUpdateEmployee(emp._id)}>Update</button>\n//             <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// const App = () => {\n//   return (\n//     <div>\n//       <Login />\n//       <EmployeeManagement />\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// // Example component for login\n// const Login = ({ onLogin }) => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n//       localStorage.setItem('token', response.data.token);\n//       onLogin(); // Notify parent about successful login\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <input\n//         type=\"text\"\n//         value={userName}\n//         onChange={(e) => setUserName(e.target.value)}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n\n// // Example component for managing employees\n// const EmployeeManagement = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n//   const [editingEmployee, setEditingEmployee] = useState(null);\n\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/employees`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n//           },\n//         });\n//         setEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n\n//     fetchEmployees();\n//   }, []);\n\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       if (editingEmployee) {\n//         await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       } else {\n//         await axios.post(`${API_URL}/employees`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       }\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//       setNewEmployee({\n//         name: '',\n//         email: '',\n//         mobile: '',\n//         designation: '',\n//         gender: '',\n//         course: '',\n//         image: null,\n//       });\n//       setEditingEmployee(null); // Clear the editing state\n//     } catch (error) {\n//       console.error('Error saving employee:', error);\n//     }\n//   };\n\n//   const handleUpdateEmployee = (employee) => {\n//     setNewEmployee(employee);\n//     setEditingEmployee(employee);\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee Management</h2>\n//       <form onSubmit={(e) => { e.preventDefault(); handleCreateEmployee(); }}>\n//         <input\n//           type=\"text\"\n//           value={newEmployee.name}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           value={newEmployee.email}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, email: e.target.value })}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={newEmployee.mobile}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, mobile: e.target.value })}\n//           placeholder=\"Mobile No\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={newEmployee.designation}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, designation: e.target.value })}\n//           placeholder=\"Designation\"\n//           required\n//         />\n//         <select\n//           value={newEmployee.gender}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, gender: e.target.value })}\n//           required\n//         >\n//           <option value=\"\">Select Gender</option>\n//           <option value=\"M\">Male</option>\n//           <option value=\"F\">Female</option>\n//         </select>\n//         <input\n//           type=\"text\"\n//           value={newEmployee.course}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, course: e.target.value })}\n//           placeholder=\"Course\"\n//           required\n//         />\n//         <input\n//           type=\"file\"\n//           onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n//         />\n//         <button type=\"submit\">{editingEmployee ? 'Update Employee' : 'Create Employee'}</button>\n//       </form>\n\n//       <h3>Employee List</h3>\n//       <ul>\n//         {employees.map(emp => (\n//           <li key={emp._id}>\n//             {emp.name} - {emp.email}\n//             <button onClick={() => handleUpdateEmployee(emp)}>Update</button>\n//             <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// const App = () => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   return (\n//     <div>\n//       {!isLoggedIn ? <Login onLogin={handleLogin} /> : <EmployeeManagement />}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport EmployeeList from './components/EmployeeList';\nimport CreateEmployee from './components/CreateEmployee';\nimport EditEmployee from './components/EditEmployee';\nimport TestComponent from './components/TestComponent';\nimport axios from 'axios';\nimport './components/styles/App.css';\n\n\nconst API_URL = 'http://localhost:5005'; // Backend URL\n\nconst App = () => {\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    designation: '',\n    gender: '',\n    course: '',\n    image: null,\n  });\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      const fetchEmployees = async () => {\n        try {\n          const response = await axios.get(`${API_URL}/employees`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          });\n          setEmployees(response.data);\n        } catch (error) {\n          console.error('Error fetching employees:', error);\n        }\n      };\n\n      fetchEmployees();\n    }\n  }, [isLoggedIn]);\n\n  const handleCreateEmployee = async () => {\n    const formData = new FormData();\n    Object.keys(newEmployee).forEach(key => {\n      formData.append(key, newEmployee[key]);\n    });\n\n    try {\n      if (editingEmployee) {\n        await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n      } else {\n        await axios.post(`${API_URL}/employees`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n      }\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setEmployees(response.data);\n      setNewEmployee({\n        name: '',\n        email: '',\n        mobile: '',\n        designation: '',\n        gender: '',\n        course: '',\n        image: null,\n      });\n      setEditingEmployee(null); // Clear the editing state\n    } catch (error) {\n      console.error('Error saving employee:', error);\n    }\n  };\n\n  const handleUpdateEmployee = (employee) => {\n    setNewEmployee(employee);\n    setEditingEmployee(employee);\n  };\n\n  const handleDeleteEmployee = async (id) => {\n    try {\n      await axios.delete(`${API_URL}/employees/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n    }\n  };\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <Router>\n      {isLoggedIn && <Navbar onLogout={handleLogout} />}\n      <Routes>\n        <Route path=\"/\" element={isLoggedIn ? <Dashboard /> : <Register onLogin={handleLogin} />} />\n        <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n        <Route path=\"/register\" element={<Register onLogin={handleLogin} />} />\n        <Route path=\"/dashboard\" element={isLoggedIn ? <Dashboard /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/employee-list\" element={isLoggedIn ? <EmployeeList employees={employees} onUpdateEmployee={handleUpdateEmployee} onDeleteEmployee={handleDeleteEmployee} /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/create-employee\" element={isLoggedIn ? <CreateEmployee newEmployee={newEmployee} setNewEmployee={setNewEmployee} handleCreateEmployee={handleCreateEmployee} /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/edit-employee/:id\" element={isLoggedIn ? <EditEmployee handleUpdateEmployee={handleUpdateEmployee} /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/test\" element={<TestComponent />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}